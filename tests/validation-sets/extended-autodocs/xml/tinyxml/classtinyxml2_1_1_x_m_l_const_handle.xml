<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtinyxml2_1_1_x_m_l_const_handle" kind="class" language="C++" prot="public">
    <compoundname>tinyxml2::XMLConstHandle</compoundname>
    <includes refid="tinyxml2_8h" local="no">tinyxml2.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtinyxml2_1_1_x_m_l_const_handle_1ad4d8db839660ef730adfa2439945c4da" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_node" kindref="compound">XMLNode</ref> *</type>
        <definition>const XMLNode* tinyxml2::XMLConstHandle::_node</definition>
        <argsstring></argsstring>
        <name>_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2191" column="19" bodyfile="tinyxml2.h" bodystart="2191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a098bda71fa11d7c74ccddab59d5dd534" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tinyxml2::XMLConstHandle::XMLConstHandle</definition>
        <argsstring>(const XMLNode *node)</argsstring>
        <name>XMLConstHandle</name>
        <param>
          <type>const <ref refid="classtinyxml2_1_1_x_m_l_node" kindref="compound">XMLNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2136" column="14" bodyfile="tinyxml2.h" bodystart="2136" bodyend="2137"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a8420a0c4720637e0529e78c2e22f2b0b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tinyxml2::XMLConstHandle::XMLConstHandle</definition>
        <argsstring>(const XMLNode &amp;node)</argsstring>
        <name>XMLConstHandle</name>
        <param>
          <type>const <ref refid="classtinyxml2_1_1_x_m_l_node" kindref="compound">XMLNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2138" column="14" bodyfile="tinyxml2.h" bodystart="2138" bodyend="2139"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a639317ad315ff24f4ef0dc69312d7303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tinyxml2::XMLConstHandle::XMLConstHandle</definition>
        <argsstring>(const XMLConstHandle &amp;ref)</argsstring>
        <name>XMLConstHandle</name>
        <param>
          <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2140" column="5" bodyfile="tinyxml2.h" bodystart="2140" bodyend="2141"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a2d74c91df1ff9aa5f9b57e3dceddbf94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref> &amp;</type>
        <definition>XMLConstHandle&amp; tinyxml2::XMLConstHandle::operator=</definition>
        <argsstring>(const XMLConstHandle &amp;ref)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2143" column="20" bodyfile="tinyxml2.h" bodystart="2143" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1aef06bd16cb308652a32b864b0a743136" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::FirstChild</definition>
        <argsstring>() const</argsstring>
        <name>FirstChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2148" column="26" bodyfile="tinyxml2.h" bodystart="2148" bodyend="2150"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1ac747db472ffc55c5af2e82ffec813640" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::FirstChildElement</definition>
        <argsstring>(const char *name=0) const</argsstring>
        <name>FirstChildElement</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2151" column="26" bodyfile="tinyxml2.h" bodystart="2151" bodyend="2153"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a908436124990f3d7b35cb7df20d31d9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::LastChild</definition>
        <argsstring>() const</argsstring>
        <name>LastChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2154" column="26" bodyfile="tinyxml2.h" bodystart="2154" bodyend="2156"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a9de0475ec42bd50c0e64624a250ba5b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::LastChildElement</definition>
        <argsstring>(const char *name=0) const</argsstring>
        <name>LastChildElement</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2157" column="26" bodyfile="tinyxml2.h" bodystart="2157" bodyend="2159"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1acf68cc7930e4ac883e0c7e16ef2fbb66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::PreviousSibling</definition>
        <argsstring>() const</argsstring>
        <name>PreviousSibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2160" column="26" bodyfile="tinyxml2.h" bodystart="2160" bodyend="2162"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1aef99308659f2617299ac29980769a91e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::PreviousSiblingElement</definition>
        <argsstring>(const char *name=0) const</argsstring>
        <name>PreviousSiblingElement</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2163" column="26" bodyfile="tinyxml2.h" bodystart="2163" bodyend="2165"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1aec3710e455f41014026ef17fbbb0efb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::NextSibling</definition>
        <argsstring>() const</argsstring>
        <name>NextSibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2166" column="26" bodyfile="tinyxml2.h" bodystart="2166" bodyend="2168"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a3c9e6b48b02d3d5232e1e8780753d8a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_const_handle" kindref="compound">XMLConstHandle</ref></type>
        <definition>const XMLConstHandle tinyxml2::XMLConstHandle::NextSiblingElement</definition>
        <argsstring>(const char *name=0) const</argsstring>
        <name>NextSiblingElement</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2169" column="26" bodyfile="tinyxml2.h" bodystart="2169" bodyend="2171"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a61812760cb08bc1b050e65b73a08457b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_node" kindref="compound">XMLNode</ref> *</type>
        <definition>const XMLNode* tinyxml2::XMLConstHandle::ToNode</definition>
        <argsstring>() const</argsstring>
        <name>ToNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2174" column="19" bodyfile="tinyxml2.h" bodystart="2174" bodyend="2176"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a4dba53c6e201d412e915620feaaa56f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_element" kindref="compound">XMLElement</ref> *</type>
        <definition>const XMLElement* tinyxml2::XMLConstHandle::ToElement</definition>
        <argsstring>() const</argsstring>
        <name>ToElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2177" column="22" bodyfile="tinyxml2.h" bodystart="2177" bodyend="2179"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a80e24d90d476005aa35602a665358e2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_text" kindref="compound">XMLText</ref> *</type>
        <definition>const XMLText* tinyxml2::XMLConstHandle::ToText</definition>
        <argsstring>() const</argsstring>
        <name>ToText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2180" column="19" bodyfile="tinyxml2.h" bodystart="2180" bodyend="2182"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a4395e5feaba7b456a81ca274880ea3d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_unknown" kindref="compound">XMLUnknown</ref> *</type>
        <definition>const XMLUnknown* tinyxml2::XMLConstHandle::ToUnknown</definition>
        <argsstring>() const</argsstring>
        <name>ToUnknown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2183" column="22" bodyfile="tinyxml2.h" bodystart="2183" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1_x_m_l_const_handle_1a55e306d105fa80d626041e4d3b77b716" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1_x_m_l_declaration" kindref="compound">XMLDeclaration</ref> *</type>
        <definition>const XMLDeclaration* tinyxml2::XMLConstHandle::ToDeclaration</definition>
        <argsstring>() const</argsstring>
        <name>ToDeclaration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tinyxml2.h" line="2186" column="26" bodyfile="tinyxml2.h" bodystart="2186" bodyend="2188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A variant of the <ref refid="classtinyxml2_1_1_x_m_l_handle" kindref="compound">XMLHandle</ref> class for working with const XMLNodes and Documents. It is the same in all regards, except for the &apos;const&apos; qualifiers. See <ref refid="classtinyxml2_1_1_x_m_l_handle" kindref="compound">XMLHandle</ref> for API. </para>
    </detaileddescription>
    <location file="tinyxml2.h" line="2133" column="1" bodyfile="tinyxml2.h" bodystart="2134" bodyend="2192"/>
    <listofallmembers>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1ad4d8db839660ef730adfa2439945c4da" prot="private" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>_node</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1aef06bd16cb308652a32b864b0a743136" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>FirstChild</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1ac747db472ffc55c5af2e82ffec813640" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>FirstChildElement</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a908436124990f3d7b35cb7df20d31d9e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>LastChild</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a9de0475ec42bd50c0e64624a250ba5b2" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>LastChildElement</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1aec3710e455f41014026ef17fbbb0efb3" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>NextSibling</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a3c9e6b48b02d3d5232e1e8780753d8a5" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>NextSiblingElement</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a2d74c91df1ff9aa5f9b57e3dceddbf94" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>operator=</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1acf68cc7930e4ac883e0c7e16ef2fbb66" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>PreviousSibling</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1aef99308659f2617299ac29980769a91e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>PreviousSiblingElement</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a55e306d105fa80d626041e4d3b77b716" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>ToDeclaration</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a4dba53c6e201d412e915620feaaa56f3" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>ToElement</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a61812760cb08bc1b050e65b73a08457b" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>ToNode</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a80e24d90d476005aa35602a665358e2d" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>ToText</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a4395e5feaba7b456a81ca274880ea3d3" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>ToUnknown</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a098bda71fa11d7c74ccddab59d5dd534" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>XMLConstHandle</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a8420a0c4720637e0529e78c2e22f2b0b" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>XMLConstHandle</name></member>
      <member refid="classtinyxml2_1_1_x_m_l_const_handle_1a639317ad315ff24f4ef0dc69312d7303" prot="public" virt="non-virtual"><scope>tinyxml2::XMLConstHandle</scope><name>XMLConstHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
